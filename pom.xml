<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.onsdigital</groupId>
    <artifactId>dp-java-duration-parse</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <repositories>
        <!--Jitpack io allows us include projects and libraries available on github but not built and published to maven central-->
        <!-- It is used for including internal project modules. See more on https://jitpack.io/-->
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.8.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>

        <resources>
            <!-- Standard resources -->
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <!-- Your static content - this will end up in target/web/ -->
            <resource>
                <directory>src/main/web</directory>
                <targetPath>${project.build.directory}/web</targetPath>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                    <plugin>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <version>3.0.0-M1</version>
                        <configuration>
                            <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                        </configuration>
                    </plugin>

                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.0.0-M5</version>
                    </plugin>

                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>3.0.0-M5</version>
                    </plugin>

                    <!--  Java 1.8-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.8.1</version>
                        <configuration>
                            <source>1.8</source>
                            <target>1.8</target>
                            <encoding>UTF-8</encoding>
                        </configuration>
                    </plugin>

                    <!-- An assembly that includes all dependencies for deployment:-->
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.3.0</version>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <archive>
                                <manifest>
                                    <!--<mainClass>com.github.davidcarboni.restolino.Main</mainClass>-->
                                    <mainClass>com.github.onsdigital.thetrain.App</mainClass>
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                </manifest>
                            </archive>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!--  A folder of dependencies is used in development when reloading classes:-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <!-- Default output folder is ${project.build.directory}/dependency -->
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Dependency Auditing-->
                    <plugin>
                        <groupId>org.sonatype.ossindex.maven</groupId>
                        <artifactId>ossindex-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>audit-dependencies-critical</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>audit</goal>
                                </goals>
                            </execution>
                        </executions>
                        <!-- configuration for mvn ossindex:audit -->
                        <configuration>
                            <!-- if CVSS >= 7.0 (high or critical) then ERROR else WARN -->
                            <fail>true</fail>
                            <cvssScoreThreshold>7.0</cvssScoreThreshold>
                        </configuration>
                    </plugin>

            </plugins>
        </pluginManagement>
    </build>
</project>